terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.0"
    }
  }
}

provider "aws" {
  region = "ca-central-1"
}


resource "aws_api_gateway_rest_api" "pcoi_api" {
  name        = "pcoi_api"
  description = "This is an terraform API Gateway"
  endpoint_configuration {
    types = ["REGIONAL"]
  }  
}

resource "aws_api_gateway_resource" "resource_consent" {
  rest_api_id = aws_api_gateway_rest_api.pcoi_api.id
  parent_id   = aws_api_gateway_rest_api.pcoi_api.root_resource_id
  path_part   = "Consent"
}

resource "aws_api_gateway_method" "method_consent_post" {
  rest_api_id   = aws_api_gateway_rest_api.pcoi_api.id
  resource_id   = aws_api_gateway_resource.resource_consent.id
  http_method   = "POST"
  authorization = "NONE"
}

resource "aws_api_gateway_integration" "integration_consent_post" {
  rest_api_id             = aws_api_gateway_rest_api.pcoi_api.id
  resource_id             = aws_api_gateway_resource.resource_consent.id
  http_method             = aws_api_gateway_method.method_consent_post.http_method
  integration_http_method = "POST"
  type                    = "HTTP"
  uri                     = var.backbone_url
  request_parameters = {
    "integration.request.header.x-oag-apiname": "'eCunsult'"
    "integration.request.header.x-oag-audit-enabled": "'true'"
    "integration.request.header.x-oag-audit-ignore-failure": "'true'"
    "integration.request.header.x-oag-scope": "'system/Bundle.write'"
    "integration.request.header.x-oag-scope-2": "'system/Bundle.write'"
  }

  request_templates = { 
    "application/json" = file("${path.module}/integration-request-template.vtl")
  }

}

resource "aws_api_gateway_method_response" "consent_post_response_200" {
  rest_api_id = aws_api_gateway_rest_api.pcoi_api.id
  resource_id = aws_api_gateway_resource.resource_consent.id
  http_method = aws_api_gateway_method.method_consent_post.http_method
  status_code = "200"
  response_models = {
     "application/json" = "Empty"
  }
}

resource "aws_api_gateway_integration_response" "consent_post_integration_response_default" {
  rest_api_id = aws_api_gateway_rest_api.pcoi_api.id
  resource_id = aws_api_gateway_resource.resource_consent.id
  http_method = aws_api_gateway_method.method_consent_post.http_method
  status_code = aws_api_gateway_method_response.consent_post_response_200.status_code
  # Transforms the backend JSON response to XML
  response_templates = {
    "application/json" = file("${path.module}/integration-response-template.vtl")
  }
}



resource "aws_api_gateway_deployment" "pcoi_deployment" {
  depends_on = [
    aws_api_gateway_integration.integration_consent_post,
  ]

  rest_api_id = aws_api_gateway_rest_api.pcoi_api.id
}

resource "aws_api_gateway_stage" "pcoi_stage" {
  deployment_id = aws_api_gateway_deployment.pcoi_deployment.id
  rest_api_id   = aws_api_gateway_rest_api.pcoi_api.id
  stage_name    = var.stage_name
  variables = {
    "api_name": "olis"
    "lobEndpoint": var.lob_url
  }
}



output "base_url" {
  value = aws_api_gateway_deployment.pcoi_deployment.invoke_url
}
